@startuml

class SnakeGame {
    - gameWidth: int
    - gameHeight: int
    - snake: Snake
    - apple: Apple
    - obstacles: List<Obstacle>
    - score: int
    - highScore: int
    - gameOver: bool
    + init(gameWidth: int, gameHeight: int)
    + startGame(): void
    + update(): void
    + handleInput(input: str): void
    + generateApple(): void
    + generateObstacles(numObstacles: int): void
    + checkCollisions(): void
    + increaseScore(points: int): void
    + increaseSpeed(): void
}

class Snake {
    - segments: List<Point>
    - direction: str
    + init(startSegments: List<Point>, startDirection: str)
    + move(): void
    + grow(): void
    + draw(): void
}

class Apple {
    - position: Point
    + init(position: Point)
    + draw(): void
}

class Obstacle {
    - position: Point
    + init(position: Point)
    + draw(): void
}

class Point {
    - x: int
    - y: int
}

SnakeGame -- Snake: contains >
SnakeGame -- Apple: contains >
SnakeGame -- Obstacle: contains >

Snake -- Apple: eats >
Snake -- Obstacle: collides with >

@enduml